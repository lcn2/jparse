.\" section 1 man page for jstrencode
.\"
.\" This man page was first written by Cody Boone Ferguson for the IOCCC
.\" in 2022.
.\"
.\" Humour impairment is not virtue nor is it a vice, it's just plain
.\" wrong: almost as wrong as JSON spec mis-features and C++ obfuscation! :-)
.\"
.\" "Share and Enjoy!"
.\"     --  Sirius Cybernetics Corporation Complaints Division, JSON spec department. :-)
.\"
.TH jstrencode 1 "09 November 2024" "jstrencode" "jparse tools"
.SH NAME
.B jstrencode
\- JSON encode command line strings
.SH SYNOPSIS
.B jstrencode
.RB [\| \-h \|]
.RB [\| \-v
.IR level \|]
.RB [\| \-q \|]
.RB [\| \-V \|]
.RB [\| \-t \|]
.RB [\| \-n \|]
.RB [\| \-N \|]
.RB [\| \-Q \|]
.RB [\| \-e \|]
.RB [\| \-E
.IR level \|]
.RI [\| string
.IR ... \|]
.SH DESCRIPTION
.B jstrencode
encodes command line strings in JSON format according to the so-called JSON specification.
It will, in the case of UTF\-8 or UTF\-16 codepoints in the JSON format of
.B
.B \\\\uxxxx
or
.BR \\\\uxxxx\\\\uxxxx ,
where
.B x
is a hexadecimal digit, encode to the proper Unicode symbol, although if your system cannot show it or it is invalid, you might see a symbol that indicates this.
.PP
If given the
.B \-Q
option it will enclose the entire output in quotes.
If given the
.B \-e
option it will enclose each encoded string with escaped double quotes.
The use of
.B \-Q
and
.B \-e
together will surround the entire output with unescaped quotes and each encoded arg will be surrounded with escaped (backslashed) quotes.
To ignore newlines in the input, use the
.B \-N
option.
On the other hand, if you do not want a newline printed after the output, use the
.B \-n
option.
By default the program reads from
.BR stdin ,
if no arg is specified.
Otherwise it will act on the arguments to the program.
.PP
If given the
.B \-t
option it performs a test on the JSON encode and decode functions.
.SH OPTIONS
.TP
.B \-h
Show help and exit
.TP
.BI \-v\  level
Set verbosity level to
.IR level
(def: 0)
.TP
.B \-q
Suppresses some of the output (def: not quiet)
.TP
.B \-V
Show version and exit
.TP
.B \-t
Run tests on the JSON encode/decode functions
.TP
.B \-n
Do not output a newline after the encode function
.TP
.B \-N
Ignore all newline characters in input
.TP
.B \-Q
Enclose output in double quotes
.TP
.B \-e
Enclose each decoded string (after encoding) with escaped double quotes (def: do not)
.TP
.BI \-E\  level
Entertainment mode at level
.IR level .
.SH EXIT STATUS
.TP
0
encode successful
.TQ
1
encode unsuccessful
.TQ
2
.B \-h
and help string printed or
.B \-V
and version string printed
.TQ
3
command line error
.TQ
>= 10
internal error
.SH BUGS
.PP
A known problem, at least with some terminal applications, is that one has to hit ctrl\-d (or whatever one has
.B EOF
configured as) twice in order for it to properly send
.B EOF
(this occurs in other applications as well so it seems to be a terminal problem).
.PP
If you have an issue with the tool you can report it at
.br
.IR \<https://github.com/xexyl/jparse/issues\> .
.SH EXAMPLES
.PP
Encode the JSON string
.BR {\ "test_mode"\ :\ false\ } :
.sp
.RS
.ft B
 jstrencode { "test_mode" : false }
.ft R
.RE
.sp
Notice that we didn't quote it!
.PP
Encode input from
.B stdin
(send
.BR EOF ,
usually ctrl\-d or
.BR ^D ,
to encode):
.sp
.RS
.ft B
 jstrencode
 \-5
 ^D
.ft R
.RE
.PP
Encode just a negative number:
.sp
.RS
.ft B
 jstrencode \-\- \-5
.ft R
.RE
.PP
Display the dragon emoji (U+1F409):
.sp
.RS
.ft B
 jstrencode "\\uD83D\\uDC09"
.ft R
.RE
.PP
Ignore newlines in input:
.sp
.RS
.ft B
 printf "foo\\\\nbar" | jstrencode -N 
.ft R
.RE
.PP
Enclose output in double quotes:
.sp
.RS
.ft B
 jstrencode -Q foo bar baz
.ft R
.RE
.PP
Run test mode:
.sp
.RS
.ft B
 jstrencode \-t
.ft R
.RE
.PP
Have some fun:
.sp
.RS
.ft B
 jstrencode -E 1
.ft R
.RE
.PP
Have even more fun:
.sp
.RS
.ft B
 jstrencode -E 3
.ft R
.RE
.SH SEE ALSO
.PP
For the decode counterpart, see
.BR jstrdecode (1).
